function [psi,dpsi] = lagrange_basis_laguerre_functions(P,Q,xgl,xnq)
%[psi,dpsi] = lagrange_basis_laguerre_functions(xgl)
% See Eq. (3.17) in Shen 2000

% nbasis = length(xgr);
% N = nbasis -1;
% Np1 = N+1;

% psi = eye(nbasis);
% dpsi = zeros(nbasis);
% dpsi(1,1)=-(N +1)./2.0;

psi=zeros(P,Q);
dpsi=zeros(P,Q);

Lkxi = scaled_laguerre(xgl,P);

% for i = 1:nbasis
%     xi = xgr(i);
%     for j = 1:nbasis
%         xj = xgr(j);
%         if(i ~= j)
%            %dpsi(j,i) = scaled_laguerre(xi,Np1)/(scaled_laguerre(xj,Np1).*(xi -xj));
%            dpsi(j,i) = Lkxi(i)/(Lkxi(j).*(xi-xj));
%         end
%     end
% end

%Perform Quadrature/Sample the Function
for l=1:Q
   xl=xnq(l);
   
   %Construct Basis
   for i=1:P
      xi=xgl(i);
      psi(i,l)=1;
      dpsi(i,l)=0;
      for j=1:P
         xj=xgl(j);
         %Basis
         if (j ~= i)
            psi(i,l)=psi(i,l)*(xl-xj)/(xi-xj);
         end
         ddpsi=1;
         if (j ~= i)
            for k=1:P
               xk=xgl(k);
               %Derivative of Basis
               if (k ~=i & k ~=j)
                  ddpsi=ddpsi*(xl-xk)/(xi-xk);
               end
            end
            dpsi(i,l)=dpsi(i,l) + ddpsi/(xi-xj);
         end
      end
   end
end


end


function y = scaled_laguerre(x,n)
Lkx = real(laguerreL(n,x));
y = exp(-x/2).*Lkx;
end